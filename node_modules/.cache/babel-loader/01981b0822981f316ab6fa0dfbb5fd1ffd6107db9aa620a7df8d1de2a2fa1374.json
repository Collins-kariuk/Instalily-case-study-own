{"ast":null,"code":"// Import the axios library for making HTTP requests\nimport axios from'axios';// Define an asynchronous function to get a message from the AI backend\nexport const getAIMessage=async userQuery=>{try{// Make a POST request to the backend server with the user query\nconst response=await axios.post('http://localhost:5001/query',{query:userQuery});// Assuming the backend returns an object with a \"message\" property,\n// create an object to represent the assistant's response\nconst message={role:\"assistant\",content:response.data.message};// Return the assistant's message\nreturn message;}catch(error){// Log the error to the console for debugging\nconsole.error(\"Error fetching AI message: \",error.response?error.response.data:error.message);// Return an error message if the request fails\nreturn{role:\"assistant\",content:\"Sorry, something went awry. Please try again.\"};}};","map":{"version":3,"names":["axios","getAIMessage","userQuery","response","post","query","message","role","content","data","error","console"],"sources":["/Users/munenekariuki/Downloads/GitHub/instalily-case-study/src/api/api.js"],"sourcesContent":["// Import the axios library for making HTTP requests\nimport axios from 'axios';\n\n// Define an asynchronous function to get a message from the AI backend\nexport const getAIMessage = async (userQuery) => {\n  try {\n    // Make a POST request to the backend server with the user query\n    const response = await axios.post('http://localhost:5001/query', { query: userQuery });\n\n    // Assuming the backend returns an object with a \"message\" property,\n    // create an object to represent the assistant's response\n    const message = {\n      role: \"assistant\",\n      content: response.data.message\n    };\n\n    // Return the assistant's message\n    return message;\n    \n  } catch (error) {\n    // Log the error to the console for debugging\n    console.error(\"Error fetching AI message: \", error.response ? error.response.data : error.message);\n\n    // Return an error message if the request fails\n    return {\n      role: \"assistant\",\n      content: \"Sorry, something went awry. Please try again.\"\n    };\n  }\n};\n"],"mappings":"AAAA;AACA,MAAO,CAAAA,KAAK,KAAM,OAAO,CAEzB;AACA,MAAO,MAAM,CAAAC,YAAY,CAAG,KAAO,CAAAC,SAAS,EAAK,CAC/C,GAAI,CACF;AACA,KAAM,CAAAC,QAAQ,CAAG,KAAM,CAAAH,KAAK,CAACI,IAAI,CAAC,6BAA6B,CAAE,CAAEC,KAAK,CAAEH,SAAU,CAAC,CAAC,CAEtF;AACA;AACA,KAAM,CAAAI,OAAO,CAAG,CACdC,IAAI,CAAE,WAAW,CACjBC,OAAO,CAAEL,QAAQ,CAACM,IAAI,CAACH,OACzB,CAAC,CAED;AACA,MAAO,CAAAA,OAAO,CAEhB,CAAE,MAAOI,KAAK,CAAE,CACd;AACAC,OAAO,CAACD,KAAK,CAAC,6BAA6B,CAAEA,KAAK,CAACP,QAAQ,CAAGO,KAAK,CAACP,QAAQ,CAACM,IAAI,CAAGC,KAAK,CAACJ,OAAO,CAAC,CAElG;AACA,MAAO,CACLC,IAAI,CAAE,WAAW,CACjBC,OAAO,CAAE,+CACX,CAAC,CACH,CACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}